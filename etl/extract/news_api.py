import logging
import requests
import pandas as pd
import json

from pandas import json_normalize

class NewsApi:
    """
    API –¥–ª—è –ø–æ–ª—É—á–µ–Ω—è –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π
    –ú–æ–∂–Ω–æ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å NewsApiClient —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ newsapi, –Ω–æ –º–æ–∂–Ω–æ –∏ –æ–±—ã—á–Ω—ã–º–∏ requests

    Returns:
        _type_: _description_
    """
    _news_api_url = "https://newsapi.org/v2/everything"

    def __init__(self) -> None:
        pass

    def get_articles(
        self,
        api_key: str,
        keyword: str,
        date_from: str,
        date_to: str,
        save_csv: bool=False
    ): 
        """
        –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–µ–π —Å NewsApi

        Args:
            api_key (str): –∫–ª—é—á API
            keyword (str): –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑–∞, —Å—Ç–∞—Ç—å–∏ –ø–æ –∫–æ—Ç–æ—Ä—ã–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–π—Ç–∏
            date_from (str): —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–µ–π –ø–æ –¥–∞—Ç–µ
            date_to (str): —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–µ–π –ø–æ –¥–∞—Ç–µ

        Returns:
            _type_: _description_
        """
        data_df = None
        page = 1
        while True:
            logging.info(f"–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º page: {str(page)}")

            params = {
                "q": keyword,
                "from": date_from,
                "to": date_to,
                "page": page,
                "apiKey": api_key,
            }

            logging.info(json.dumps(params))
            logging.info(f"–û–±—Ä–∞—â–∞–µ–º—Å—è –ø–æ –∞–¥—Ä–µ—Å—É {self._news_api_url}")
            try:
                response = requests.get(
                    self._news_api_url, 
                    params=params,
                    timeout=3,
                )
                
            except requests.exceptions.Timeout:
                logging.warning("–û—à–∏–±–∫–∞ timeout –æ—Ç NewsApi. –û—Ç–≤–µ—Ç –Ω–µ –ø—Ä–∏—à–µ–ª")
                page += 1
                continue
            except requests.exceptions.ConnectionError as e:
                print("üîå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (–≤–∫–ª—é—á–∞—è ReadTimeout):", e)
                page += 1
                continue
            except requests.exceptions.RequestException as e:
                logging.warning("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", e)
                page += 1
                continue
            
            logging.info(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code != 200:
                logging.info(f"–ü–æ–ª—É—á–∏–ª–∏ {response.status_code}")
                if save_csv:
                    data_df.to_csv(f"data_{keyword}.csv")
                    logging.info(f"–°–æ—Ö—Ä–∞–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ data_{keyword}.csv")
                return data_df
            
            logging.info("–ü—Ä–∏–Ω—è–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
            data = response.json()
            logging.info(f"–í—Å–µ–≥–æ {data['totalResults']} –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –ø–æ –¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É")

            data_df = pd.concat([data_df, json_normalize(data["articles"])], ignore_index=True)
            page += 1
